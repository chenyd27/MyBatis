<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--teacher mapper-->
<mapper namespace="com.cyd.mapper.TeacherMapper">
    <select id="getTeacherList" resultType="Teacher">
        select * from teacher;
    </select>

    <!--获取单个老师的学生结果集-->
    <!--按结果查询
    javaType : 指定属性的类型
    集合中的范型信息，我们使用 ofType 获取
    -->
    <resultMap id="TeacherMap" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>
    <select id="getTeacher" resultMap="TeacherMap">
        select s.id sid,s.name sname,t.name tname
        from student s,teacher t
        where s.tid = t.id and t.id = #{tid};
    </select>
    <!--=================================================================-->
    <!--子查询
        先查老师
        再查学生
        将学生嵌套到老师中
    -->
    <resultMap id="TeacherMap2" type="Teacher">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <!--重点，将老师的id在 column 中传参-->
        <collection property="students" javaType="ArrayList" ofType="Student" select="getStudentbyTeacherID" column="id"/>
    </resultMap>
    <select id="getTeacher2" resultMap="TeacherMap2">
        select * from teacher where id = #{tid};
    </select>
    <select id="getStudentbyTeacherID" resultType="Student">
        select * from student where tid = #{tid};
    </select>
</mapper>